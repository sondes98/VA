version: '3'
services:
  zookeeper:
    image: zookeeper:latest
    container_name: zookeeper
    networks:
      - kafka-spark-network

  kafka:
    image: bitnami/kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
    depends_on:
      - zookeeper
    networks:
      - kafka-spark-network

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.1
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
    ports:
      - "9200:9200"
      - "9300:9300"
    networks:
      - kafka-spark-network

  # flask-app:
  #   build:
  #     context: ./flask-app
  #   container_name: flask-app
  #   ports:
  #     - "5000:5000"
  #   environment:
  #     KAFKA_BOOTSTRAP_SERVERS: kafka:9092
  #   depends_on:
  #     - kafka
  #     - elasticsearch
  #   networks:
  #     - kafka-spark-network

  spark-app:
    build:
      context: ./spark-app
    container_name: spark-app
    depends_on:
      - kafka
      - elasticsearch
    networks:
      - kafka-spark-network

  spark:
    image: bitnami/spark:latest
    container_name: spark
    ports:
      - "4040:4040"
    environment:
      - SPARK_MODE=master
    networks:
      - kafka-spark-network

  # react-app:
  #   build:
  #     context: ./frontend
  #   container_name: react-app
  #   ports:
  #     - "3000:3000"
  #   depends_on:
  #     - flask-app
  #   networks:
  #     - kafka-spark-network

networks:
  kafka-spark-network:
    driver: bridge
